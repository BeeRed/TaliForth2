List of tools for Tali Forth 2 
Scot W. Stevenson <scot.stevenson@gmail.com>
First version: 24. Nov 2017
This version: 24. Nov 2017

Large parts of the Tali 2 code skeleton were generated by Python tools. Also,
we use these programs to automatically create some of the documentation and to
make sure the assembler code is valid. All tools require at least Python 3.5
- they will not run with Python 2. 

    generate_headers.py     - Create skeleton header.asm from wordsource.json
    generate_wordlist.py    - Create documentation table in wordlist.md
    generate_words.py       - Create skeleton of words.asm
    text_to_json.py         - Convert wordsource.txt to wordsource.json
    validate_header.py      - Make sure header.asm is correctly linked

We start out with a list of works and their names (wordsource.txt) and convert
that to a JSON file (wordsource.json) with the script text_to_json.py. JSON is
used so other projects can use this file as a base for their own projects
(you're welcome). 

The JSON wordsource file is used as the basis to create the file words.asm with
generate_words.py. words.asm is the part of Tali's source code with the word
definitions. They have a special comment format that allows automatic generation
of the table in wordlist.md, which gives the size and status of each word. 

It is also used for a rough version of the header.asm file which contains the
headers of the words. This single-linked list has to be ordered by hand to put
the most-used words at the beginning (that is, at the end of the actual list).
Because this can be error prone, validate_header.py walks through the list
and makes sure that it is correct.
